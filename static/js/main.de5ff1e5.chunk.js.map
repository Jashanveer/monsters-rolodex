{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","key","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","bind","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qVAGaA,G,kBAAO,SAACC,GAAD,OAChB,yBAAKC,UAAU,kBACX,yBACIC,IAAM,UACNC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEP,4BAAML,EAAMI,QAAQE,KAApB,KACA,2BAAIN,EAAMI,QAAQG,UCNbC,EAAW,SAAAR,GAAK,OACzB,yBAAKC,UAAU,aACVD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,kBAAC,EAAD,CAAMO,IAAOP,EAAQC,GAAID,QAASA,SCHjCQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,2BAAOC,KAAK,SAASd,UAAU,SAC/BY,YAAaA,EACbG,SAAUF,MC2CCG,E,kDA7Cb,aAAc,IAAD,8BACX,gBAgBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAfrC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAc,IAGhB,EAAKN,aAAe,EAAKA,aAAaU,KAAlB,gBART,E,qDAWb,WAAoB,IAAD,OACjBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACV,SAAUoB,S,oBAQ1C,WAAS,IAAD,EAE4BC,KAAKP,MAA/Bd,EAFF,EAEEA,SAAUW,EAFZ,EAEYA,YAGZW,EAAmBtB,EAASuB,QAAO,SAAA5B,GAAO,OAC5CA,EAAQE,KAAK2B,cAAcC,SAASd,EAAYa,kBAGlD,OAEE,yBAAKhC,UAAU,OACb,+CACA,kBAAC,EAAD,CACAY,YAAc,kBACdC,aAAcgB,KAAKhB,eAEnB,kBAAC,EAAD,CAAUL,SAAYsB,S,GAxChBI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.de5ff1e5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img \r\n            alt = 'monster'\r\n            src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        />\r\n        <h2 >{props.monster.name} </h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component.jsx'\r\n\r\nexport const CardList = props => (\r\n    <div className='card-list'>\r\n        {props.monsters.map(monster => (\r\n            <Card key = {monster.id} monster={monster} />\r\n        ))}\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input type='search' className='search'\r\n    placeholder={placeholder} \r\n    onChange={handleChange}\r\n    />\r\n\r\n)","import React, {Component} from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component'\nimport {SearchBox} from './components/search-box/search-box.component'\nclass App extends Component{\n  constructor(){\n    super();   // calls the constructor to the components class\n\n    this.state = {\n      monsters: [],\n      searchField : ''\n    };\n\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({monsters: users}));\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value })\n  }\n\n\n    render(){\n\n      const { monsters, searchField } = this.state; // destructuring\n      // const monsters = this.state.monsters; \n      // const searchField = this.state.searchField \n      const filteredMonsters = monsters.filter(monster => \n          monster.name.toLowerCase().includes(searchField.toLowerCase())\n        )\n\n        return (\n\n          <div className=\"App\">\n            <h1>Monster Rolodex</h1>\n            <SearchBox\n            placeholder = 'search monsters'\n            handleChange={this.handleChange}\n          ></SearchBox>\n            <CardList monsters = {filteredMonsters}></CardList>\n          </div>\n        )\n    }\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}